{"version":3,"sources":["places/pages/NewPlace.js"],"names":["NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled"],"mappings":"miNAwGeA,UAvFE,WACf,IAAMC,EAAOC,qBAAWC,KACxB,EAAqDC,cAA7CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAAkCC,YAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAGb,GAnBF,mBAAOI,EAAP,KAAkBC,EAAlB,KAsBMC,EAAUC,cAEVC,EAAkB,uCAAG,WAAMC,GAAN,8EACzBA,EAAMC,iBADmB,UAGjBC,EAAW,IAAIC,UACZC,OAAO,QAAST,EAAUU,OAAOhB,MAAMC,OAChDY,EAASE,OAAO,cAAeT,EAAUU,OAAOb,YAAYF,OAC5DY,EAASE,OAAO,UAAWT,EAAUU,OAAOZ,QAAQH,OACpDY,EAASE,OAAO,QAAST,EAAUU,OAAOX,MAAMJ,OAPzB,SAQjBJ,EACJoB,6CACA,OACAJ,EACD,CACCK,cAAe,UAAY3B,EAAK4B,QAbX,OAgBvBX,EAAQY,KAAK,KAhBU,4GAAH,sDAqBxB,OACE,oCACA,kBAAC,IAAD,CAAYxB,MAAOA,EAAOyB,QAASvB,IACnC,0BAAMwB,UAAU,aAAaC,SAAUb,GACpCf,GAAa,kBAAC,IAAD,CAAgB6B,WAAS,IACvC,kBAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,UAAU,8BACVC,QAASzB,IAEX,kBAAC,IAAD,CACEkB,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,CAACI,YAAoB,IACjCF,UAAU,4DACVC,QAASzB,IAEX,kBAAC,IAAD,CACEkB,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,CAACC,eACbC,UAAU,gCACVC,QAASzB,IAEX,kBAAC,IAAD,CAAakB,GAAG,QAAQO,QAASzB,EAAcwB,UAAU,4BACzD,kBAAC,IAAD,CAAQJ,KAAK,SAASO,UAAW5B,EAAUJ,SAA3C","file":"static/js/8.e65b74ca.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElement/ImageUpload';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validator';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try{\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/places', \r\n        'POST', \r\n        formData,\r\n       {\r\n        Authorization: 'Bearer ' + auth.token\r\n       } \r\n      );\r\n      history.push('/');\r\n    } catch (err) {}\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"address\"\r\n        element=\"input\"\r\n        label=\"Address\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid address.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please Provide an Image\" />\r\n      <Button type=\"submit\" disabled={!formState.isValid}>\r\n        ADD PLACE\r\n      </Button>\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}